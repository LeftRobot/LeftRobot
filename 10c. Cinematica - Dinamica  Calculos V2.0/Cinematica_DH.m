%% CONVENCAO DENAVIT - HARTENBERG MECANISMO ROBÓTICO BÍPEDE 6 DoF
 % FASES DE BALANCO E APOIO

close all;
clear all;
clc;


%% 1. FASE DE BALANCO - REFERÊNCIA O0X0Y0Z0 NO CoM DO HAT - END-EFFECTOR NO DEDAO

% Define the "assumptions" para as variáveis simbólicas
syms tht_1 tht_2 tht_3 tht_4 Lc Lj Lp a0 d0;

assume(tht_1, 'real');
assume(tht_2, 'real');
assume(tht_3, 'real');
assume(tht_4, 'real');

assume(Lc, 'real');
assumeAlso(Lc, 'positive');
assume(Lj, 'real');
assumeAlso(Lj, 'positive');
assume(Lp, 'real');
assumeAlso(Lp, 'positive');

assume(a0, 'real');
assume(d0, 'real');

% Matriz de Transformacao Homogenea A1_0 (O1X1Y1Z1 -> O0X0Y0Z0)
A1_0 = [cos(tht_1-pi/2) -sin(tht_1-pi/2)*cos(0)  sin(tht_1-pi/2)*sin(0)  a0*cos(tht_1-pi/2);
        sin(tht_1-pi/2)  cos(tht_1-pi/2)*cos(0) -cos(tht_1-pi/2)*sin(0)  a0*sin(tht_1-pi/2);
        0                sin(0)                  cos(0)                  d0;
        0                0                       0                       1];
% considera-se o ângulo tht_1 = Cte = 0;
A1_0 = simplify(subs(A1_0, tht_1, 0));

% Matriz de Transformacao Homogenea A2_1 (O2X2Y2Z2 -> O1X1Y1Z1)
A2_1 = [cos(tht_2)  -sin(tht_2)*cos(0)  sin(tht_2)*sin(0)  Lc*cos(tht_2);
        sin(tht_2)   cos(tht_2)*cos(0) -cos(tht_2)*sin(0)  Lc*sin(tht_2);
        0            sin(0)             cos(0)             0;
        0            0                  0                  1]; 
% Matriz de Transformacao Homogenea A3_2 (O3X3Y3Z3 -> O2X2Y2Z2)
A3_2 = [cos(tht_3)  -sin(tht_3)*cos(0)   sin(tht_3)*sin(0)   Lj*cos(tht_3);
        sin(tht_3)   cos(tht_3)*cos(0)  -cos(tht_3)*sin(0)   Lj*sin(tht_3)
        0            sin(0)              cos(0)              0;
        0            0                   0                   1];
% O angulo tht_3 = -theta_3 sempre gira no sentido negativo da RMD
A3_2 = simplify(subs(A3_2, tht_3, -tht_3));

% Matriz de Transformacao Homogenea A4_3 (O4X4Y4Z4 -> O3X3Y3Z3)
A4_3 = [cos(tht_4+pi/2)  -sin(tht_4+pi/2)*cos(0)   sin(tht_4+pi/2)*sin(0)  Lp*cos(tht_4+pi/2);
        sin(tht_4+pi/2)   cos(tht_4+pi/2)*cos(0)  -cos(tht_4+pi/2)*sin(0)  Lp*sin(tht_4+pi/2);
        0                 sin(0)                   cos(0)                  0;
        0                 0                        0                       1];

A4_3 = simplify(A4_3);

% Posicao e orientacao do sistema O1X1Y1Z1 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Quadril
T1_0 = simplify(A1_0);
 
% Posicao e orientacao do sistema O2X2Y2Z2 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Joelho
T2_0 = simplify(A1_0*A2_1);
 
% Posicao e orientacao do sistema O3X3Y3Z3 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Tornozelo
T3_0 = simplify(A1_0*A2_1*A3_2);
 
% Posicao e orientacao do sistema O4X4Y4Z4 em relacao ao sistema O0X0Y0Z0
% Posicao do Pé (Dedao)
T4_0 = simplify(A1_0*A2_1*A3_2*A4_3);
 
%% ========== CALCULO DO JACOBIANO PARA A FASE DE BALANCO=================
% =========== SISTEMA DE REFERENCIA O0X0Y0Z0 NO CoM DO HAT ===============
% Vetor Z0 e O0 do sistema de referencia inercial o0x0Y0Z0
Z0 = [0 0 1]';
O0 = [0 0 0]';

% Vetor Z1 e O1 do sistema O1X1Y1Z1 em relacao ao sistema O0X0Y0Z0 
Z1 = T1_0(1:3,3);
O1 = T1_0(1:3,4);

% Vetor Z2 e O2 do sistema O2X2Y2Z2 em relacao ao sistema O0X0Y0Z0 
Z2 = T2_0(1:3,3);
O2 = T2_0(1:3,4);

% Vetor Z3 e O3 do sistema O3X3Y3Z3 em relacao ao sistema O0X0Y0Z0 
Z3 = T3_0(1:3,3);
O3 = T3_0(1:3,4);

% Vetor Z4 e O4 do sistema O4X4Y4Z4 em relacao ao sistema O0X0Y0Z0 
Z4 = T4_0(1:3,3);
O4 = T4_0(1:3,4);

O_40 = simplify(O4-O0);
O_41 = simplify(O4-O1);
O_42 = simplify(O4-O2);
O_43 = simplify(O4-O3);

% Matrizes jacobianas da velocidade Linear do End-Effector Jvi
Jv1 = cross(Z0, O_40);
Jv2 = cross(Z1, O_41);
Jv3 = cross(Z2, O_42);
Jv4 = cross(Z3, O_43);

% Matrizes jacobianas da velocidade Angular do End-Effector Jwi
Jw1 = Z0;
Jw2 = Z1;
Jw3 = Z2;
Jw4 = Z3;

% Matriz Jacobiana para o modelo da Fase de Balanco J = [Jvi; Jwi]
J_B = [Jv1 Jv2 Jv3 Jv4;
       Jw1 Jw2 Jw3 Jw4];

% CÁLCULO DA MATRIZ JACOBIANA INVERSA PARA A FASE DE BALANCO COM A
% REFERENCIA O0X0Y0Z0 NO CoM DO HAT

% Jinv_B = simplify(pinv(J_B));

% ===============================================================================================
Jinv_B(1,1) = (Lc^2*a0 + Lj^2*a0 + (Lc*Lj^2*cos(tht_2))/2 - (Lc*Lj^2*cos(tht_2 - 2*tht_3))/2 -...
Lc^2*a0*cos(2*tht_2) - Lj^2*a0*cos(2*tht_2 - 2*tht_3) + Lc*Lj*a0*cos(tht_3) -...
Lc*Lj*a0*cos(2*tht_2 - tht_3))/(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) -...
Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) +...
Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));

Jinv_B(2,1) = -(2*Lc^2*a0 + Lj^2*a0 - Lc*Lj^2*cos(tht_2) + Lc*Lj^2*cos(tht_2 - 2*tht_3) -...
2*Lc^2*a0*cos(2*tht_2) - Lj^2*a0*cos(2*tht_2 - 2*tht_3) + 2*Lc*Lj*a0*cos(tht_3) -...
2*Lc*Lj*a0*cos(2*tht_2 - tht_3))/(2*(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) -...
Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) +...
Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));

Jinv_B(3,1) = -(Lj*(Lj*a0 - 2*Lc^2*cos(tht_2 - tht_3) + 2*Lc^2*cos(tht_2 + tht_3) -...
2*Lc*Lj*cos(tht_2 - 2*tht_3) - Lc*a0*cos(2*tht_2 - tht_3) - Lj*a0*cos(2*tht_2 - 2*tht_3) +...
2*Lc*Lj*cos(tht_2) + Lc*a0*cos(tht_3)))/(2*(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));

Jinv_B(4,1) = -(Lc*Lj*(2*Lc*sin(tht_2)*sin(tht_3) - a0*cos(tht_3) + a0*cos(tht_2)^2*cos(tht_3) +...
a0*cos(tht_2)*sin(tht_2)*sin(tht_3)))/(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));
% ===============================================================================================

Jinv_B(1,2) = -((Lc*Lj^2*sin(tht_2 - 2*tht_3))/2 - (Lc*Lj^2*sin(tht_2))/2 +...
Lc^2*a0*sin(2*tht_2) + Lj^2*a0*sin(2*tht_2 - 2*tht_3) + Lc*Lj*a0*sin(2*tht_2 - tht_3))/(Lc^2*Lj^2 +...
Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) -...
Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) +...
Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));

Jinv_B(2,2) = ((Lc*Lj^2*sin(tht_2))/2 + 2*Lc*a0^2*sin(tht_2) - (Lc*Lj^2*sin(tht_2 - 2*tht_3))/2 +...
Lj*a0^2*sin(tht_2 - tht_3) + Lc^2*a0*sin(2*tht_2) + (Lj^2*a0*sin(2*tht_2 - 2*tht_3))/2 +...
Lc*Lj*a0*sin(2*tht_2 - tht_3))/(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) -...
Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) +...
Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));

Jinv_B(3,2) = (Lc^2*Lj*sin(tht_2 - tht_3) - Lc*Lj^2*sin(tht_2) - Lc*a0^2*sin(tht_2) -...
Lc^2*Lj*sin(tht_2 + tht_3) + Lc*Lj^2*sin(tht_2 - 2*tht_3) + Lj*a0^2*sin(tht_2 - tht_3) +...
(Lj^2*a0*sin(2*tht_2 - 2*tht_3))/2 - (3*Lc*Lj*a0*sin(tht_3))/2 +...
(Lc*Lj*a0*sin(2*tht_2 - tht_3))/2)/(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));

Jinv_B(4,2) = -(Lc*a0^2*sin(tht_2) - Lc^2*Lj*sin(tht_2 + tht_3) + Lc^2*Lj*sin(tht_2 - tht_3) +...
2*Lj*a0^2*sin(tht_2 - tht_3) - (3*Lc*Lj*a0*sin(tht_3))/2 +...
(Lc*Lj*a0*sin(2*tht_2 - tht_3))/2)/(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3));
% ==============================================================================================

Jinv_B(1,3) = 0;
Jinv_B(2,3) = 0;
Jinv_B(3,3) = 0;
Jinv_B(4,3) = 0;
% ==============================================================================================

Jinv_B(1,4) = 0;
Jinv_B(2,4) = 0;
Jinv_B(3,4) = 0;
Jinv_B(4,4) = 0;
% ==============================================================================================

Jinv_B(1,5) = 0;
Jinv_B(2,5) = 0;
Jinv_B(3,5) = 0;
Jinv_B(4,5) = 0;
% =============================================================================================
Jinv_B(1,6) = (4*Lc^2*Lp*a0*cos(tht_3)*cos(tht_4)*sin(tht_2) - 2*Lc^2*Lj*a0*sin(tht_2)*sin(tht_3) -...
2*Lc*Lj^2*Lp*cos(tht_4)*sin(tht_3) - 4*Lj^2*Lp*a0*cos(tht_2)*cos(tht_4)*sin(tht_3) +...
4*Lj^2*Lp*a0*cos(tht_3)*cos(tht_4)*sin(tht_2) - Lc*Lj*Lp*a0*cos(tht_2)*sin(tht_4) +...
3*Lc*Lj*Lp*a0*cos(tht_4)*sin(tht_2) + 4*Lc^2*Lp*a0*sin(tht_2)*sin(tht_3)*sin(tht_4) +...
Lc*Lj*Lp*a0*cos(2*tht_3)*cos(tht_2)*sin(tht_4) + Lc*Lj*Lp*a0*cos(2*tht_3)*cos(tht_4)*sin(tht_2) -...
Lc*Lj*Lp*a0*sin(2*tht_3)*cos(tht_2)*cos(tht_4) +...
Lc*Lj*Lp*a0*sin(2*tht_3)*sin(tht_2)*sin(tht_4))/(2*(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));

Jinv_B(2,6) = -(2*Lc^2*Lp*a0*sin(tht_2 + tht_3 - tht_4) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) +...
2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) + Lj^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) + Lc*Lj^2*Lp*sin(tht_3 + tht_4) +...
Lc^2*Lj*a0*cos(tht_2 + tht_3) + Lc*Lj*a0^2*cos(tht_3) - Lj*Lp*a0^2*sin(tht_4) +...
2*Lc*Lp*a0^2*sin(2*tht_2 - tht_3 + tht_4) + Lj*Lp*a0^2*sin(2*tht_2 - 2*tht_3 + tht_4) +...
Lc*Lj^2*Lp*sin(tht_3 - tht_4) - Lc^2*Lj*a0*cos(tht_2 - tht_3) +...
2*Lc*Lp*a0^2*sin(tht_3 - tht_4) + Lc*Lj*Lp*a0*sin(tht_2 - 2*tht_3 + tht_4) +...
Lc*Lj*Lp*a0*sin(tht_2 + tht_4) + 2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/(2*(Lc^2*Lj^2 +...
Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) -...
Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) +...
Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));

Jinv_B(3,6) = (Lc^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) + 2*Lc^2*Lj*Lp*sin(2*tht_3 - tht_4) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) - Lj^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) +...
Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) + 2*Lc*Lj^2*Lp*sin(tht_3 + tht_4) +...
2*Lc^2*Lj*Lp*sin(tht_4) + Lc*Lj*a0^2*cos(tht_3) + Lj*Lp*a0^2*sin(tht_4) +...
Lc*Lp*a0^2*sin(2*tht_2 - tht_3 + tht_4) - Lj*Lp*a0^2*sin(2*tht_2 - 2*tht_3 + tht_4) +...
2*Lc*Lj^2*Lp*sin(tht_3 - tht_4) + Lc*Lp*a0^2*sin(tht_3 - tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - 2*tht_3 + tht_4) + Lc*Lj*Lp*a0*sin(tht_2 + tht_4) -...
Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/(2*(Lc^2*Lj^2 + Lc^2*a0^2 + Lj^2*a0^2 -...
Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - Lc^2*Lj^2*cos(2*tht_3) -...
Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));

Jinv_B(4,6) = (2*Lc^2*Lj^2 + Lc^2*a0^2 + 2*Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) -...
2*Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) - 2*Lc^2*Lj^2*cos(2*tht_3) -...
2*Lc^2*Lj*Lp*sin(2*tht_3 - tht_4) - 2*Lc*Lj*a0^2*cos(2*tht_2 - tht_3) -...
2*Lc^2*Lj*Lp*sin(tht_4) + 2*Lc*Lj^2*a0*cos(tht_2) + 2*Lc*Lj*a0^2*cos(tht_3) -...
2*Lj*Lp*a0^2*sin(tht_4) + Lc*Lp*a0^2*sin(2*tht_2 - tht_3 + tht_4) +...
2*Lj*Lp*a0^2*sin(2*tht_2 - 2*tht_3 + tht_4) - 2*Lc*Lj^2*a0*cos(tht_2 - 2*tht_3) +...
Lc*Lp*a0^2*sin(tht_3 - tht_4) + 2*Lc*Lj*Lp*a0*sin(tht_2 - 2*tht_3 + tht_4) -...
Lc*Lj*Lp*a0*sin(tht_2 + tht_4) + Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/(2*(Lc^2*Lj^2 +...
Lc^2*a0^2 + Lj^2*a0^2 - Lc^2*a0^2*cos(2*tht_2) - Lj^2*a0^2*cos(2*tht_2 - 2*tht_3) -...
Lc^2*Lj^2*cos(2*tht_3) - Lc*Lj*a0^2*cos(2*tht_2 - tht_3) + Lc*Lj^2*a0*cos(tht_2) +...
Lc*Lj*a0^2*cos(tht_3) - Lc*Lj^2*a0*cos(tht_2 - 2*tht_3)));
% =============================================================================================

%% 2. FASE DE BALANCO - REFERENCIA O0X0Y0Z0 NO QUADRIL E END-EFFECTOR NO DEDAO 

% Define the "assumptions" para as variáveis simbólicas
syms tht_1 tht_2 tht_3 tht_4 Lc Lj Lp a0 d0;

assume(tht_1, 'real');
assume(tht_2, 'real');
assume(tht_3, 'real');
assume(tht_4, 'real');

assume(Lc, 'real');
assumeAlso(Lc, 'positive');
assume(Lj, 'real');
assumeAlso(Lj, 'positive');
assume(Lp, 'real');
assumeAlso(Lp, 'positive');

assume(a0, 'real');
assume(d0, 'real');

% Matriz de Transformacao Homogenea A10_b (LINK 1 O1X1Y1Z1 -> O0X0Y0Z0)
A10_b = [cos(tht_1-pi/2) -sin(tht_1-pi/2)*cos(0)  sin(tht_1-pi/2)*sin(0)  Lc*cos(tht_1-pi/2);
         sin(tht_1-pi/2)  cos(tht_1-pi/2)*cos(0) -cos(tht_1-pi/2)*sin(0)  Lc*sin(tht_1-pi/2);
         0                sin(0)                  cos(0)                  0;
         0                0                       0                       1];
A10_b = simplify(A10_b);

% Matriz de Transformacao Homogenea A21_b (LINK 2 O2X2Y2Z2 -> O1X1Y1Z1) 
A21_b = [cos(tht_2)  -sin(tht_2)*cos(0)  sin(tht_2)*sin(0)  Lj*cos(tht_2);
         sin(tht_2)   cos(tht_2)*cos(0) -cos(tht_2)*sin(0)  Lj*sin(tht_2);
         0            sin(0)             cos(0)             0;
         0            0                  0                  1]; 
% O angulo tht_2 = -theta_2 sempre gira no sentido negativo da RMD
A21_b = simplify(subs(A21_b, tht_2, -tht_2));
     
% Matriz de Transformacao Homogenea A32_b (LINK 3 O3X3Y3Z3 -> O2X2Y2Z2)
A32_b = [cos(tht_3+pi/2)  -sin(tht_3+pi/2)*cos(0)   sin(tht_3+pi/2)*sin(0)  Lp*cos(tht_3+pi/2);
         sin(tht_3+pi/2)   cos(tht_3+pi/2)*cos(0)  -cos(tht_3+pi/2)*sin(0)  Lp*sin(tht_3+pi/2);
         0                 sin(0)                   cos(0)                  0;
         0                 0                        0                       1];

A32_b = simplify(A32_b);

% Posicao e orientacao do sistema O1X1Y1Z1 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Joelho
T10_b = simplify(A10_b);
 
% Posicao e orientacao do sistema O2X2Y2Z2 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Tornozelo
T20_b = simplify(A10_b*A21_b);
 
% Posicao e orientacao do sistema O3X3Y3Z3 em relacao ao sistema O0X0Y0Z0
% Posicao do Pé (Dedao)
T30_b = simplify(A10_b*A21_b*A32_b);
 
 
%% ========== CALCULO DO JACOBIANO PARA A FASE DE BALANCO=================
% =========== SISTEMA O0X0Y0Z0 NA JUNTA DO QUADRIL =======================

% Vetor Z0 e O0 do sistema de referencia inercial O0x0Y0Z0
Z0_b = [0 0 1]';
O0_b = [0 0 0]';

% Vetor Z1, O1 e Matriz de Rotacao R_10 do sistema O1X1Y1Z1 em relacao ao 
% sistema O0X0Y0Z0 
Z1_b  = T10_b(1:3,3);
O1_b  = T10_b(1:3,4);
R10_b = T10_b(1:3,1:3);

% Vetor Z2, O2 e Matriz de Rotacao R_20 do sistema O2X2Y2Z2 em relacao ao 
% sistema O0X0Y0Z0 
Z2_b  = T20_b(1:3,3);
O2_b  = T20_b(1:3,4);
R20_b = T20_b(1:3,1:3);

% Vetor Z3, O3 e Matriz de Rotacao R_30 do sistema O3X3Y3Z3 em relacao ao 
% sistema O0X0Y0Z0 
Z3_b = T30_b(1:3,3);
O3_b  = T30_b(1:3,4);
R30_b = T30_b(1:3,1:3);

O30_b = simplify(O3_b - O0_b);
O31_b = simplify(O3_b - O1_b);
O32_b = simplify(O3_b - O2_b);

% Matrizes jacobianas da velocidade Linear do End-Effector Jvi
Jv1_b = cross(Z0_b, O30_b);
% para corresponder com o Jacobiano real Jv2_b = cross(Z1_b, -O31_b);
% Pelo fato de assumir que tht_2 gira sempre no sentido negativo
Jv2_b = cross(Z1_b, -O31_b);
Jv3_b = cross(Z2_b, O32_b);


% Matrizes jacobianas da velocidade Angular do End-Effector Jwi
Jw1_b = Z0_b;
Jw2_b = Z1_b;
Jw3_b = Z2_b;

% Matriz Jacobiana para o modelo da Fase de Balanco J_bal = [Jvi_b; Jwi_b]
J_bal = [Jv1_b Jv2_b Jv3_b;
         Jw1_b Jw2_b Jw3_b];

% CÁLCULO DA MATRIZ JACOBIANA INVERSA PARA A FASE DE BALANCO COM A
% REFERENCIA O0X0Y0Z0 NO QUADRIL 

% Jinv_bal = simplify(pinv(J_bal));

% ====================================================================================
Jinv_bal(1,1) =  (2*Lp*cos(tht_1 - tht_2 + tht_3) +...
Lj*sin(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));

Jinv_bal(2,1) = (Lc*sin(tht_1) + Lj*sin(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));

Jinv_bal(3,1) = -(2*Lp*cos(tht_1 - tht_2 + tht_3) +...
Lc*sin(tht_1) + 2*Lj*sin(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));
%=====================================================================================

Jinv_bal(1,2) = (2*Lp*sin(tht_1 - tht_2 + tht_3) -...
Lj*cos(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) + 2*Lj*Lp*cos(tht_3) -...
Lc*Lj*sin(tht_2));

Jinv_bal(2,2) = -(Lc*cos(tht_1) + Lj*cos(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));

Jinv_bal(3,2) = (Lc*cos(tht_1) - 2*Lp*sin(tht_1 - tht_2 + tht_3) +...
2*Lj*cos(tht_1 - tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) + 2*Lj*Lp*cos(tht_3) -...
Lc*Lj*sin(tht_2));
% ===================================================================================

Jinv_bal(1,3) = 0;
Jinv_bal(2,3) = 0;
Jinv_bal(3,3) = 0;
% ==================================================================================

Jinv_bal(1,4) = 0;
Jinv_bal(2,4) = 0;
Jinv_bal(3,4) = 0;
% =================================================================================

Jinv_bal(1,5) = 0;
Jinv_bal(2,5) = 0;
Jinv_bal(3,5) = 0;
% =================================================================================

Jinv_bal(1,6) = (Lj*Lp*cos(tht_3))/(2*Lc*Lp*cos(tht_2 - tht_3) + 2*Lj*Lp*cos(tht_3) -...
Lc*Lj*sin(tht_2));

Jinv_bal(2,6) = (Lp*(Lj*cos(tht_3) + Lc*cos(tht_2 - tht_3)))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));

Jinv_bal(3,6) = (Lc*Lp*cos(tht_2 - tht_3) - Lc*Lj*sin(tht_2))/(2*Lc*Lp*cos(tht_2 - tht_3) +...
2*Lj*Lp*cos(tht_3) - Lc*Lj*sin(tht_2));

%% 3. FASE DE APOIO - REFERENCIA NO DEDAO - END-EFFECTOR NO CoM DO HAT
% Sao consideradas 4 juntas rotacionais: th1, th2, th3, th4
% syms tht_1 tht_2 tht_3 tht_4 Lc Lj Lp a0 d0;

%% ========== CALCULO MAS MATRIZES DE TRANSFORMACAO HOMOGENEA =============
% Matriz de Transformacao Homogenea A10_a (LINK 1 O1X1Y1Z1 -> O0X0Y0Z0)

A10_a = [cos(tht_1+pi)   -sin(tht_1+pi)*cos(0)   sin(tht_1+pi)*sin(0) Lp*cos(tht_1+pi);
         sin(tht_1+pi)    cos(tht_1+pi)*cos(0)  -cos(tht_1+pi)*sin(0) Lp*sin(tht_1+pi);
         0                sin(0)                 cos(0)               0;
         0                0                      0                    1];

A10_a = simplify(A10_a);

% Matriz de Transformacao Homogenea A21_a (LINK 2 O2X2Y2Z2 -> O1X1Y1Z1) 
A21_a = [cos(tht_2-pi/2)  -sin(tht_2-pi/2)*cos(0)   sin(tht_2-pi/2)*sin(0)  Lj*cos(tht_2-pi/2);
         sin(tht_2-pi/2)   cos(tht_2-pi/2)*cos(0)  -cos(tht_2-pi/2)*sin(0)  Lj*sin(tht_2-pi/2);
         0                 sin(0)                   cos(0)                  0;
         0                 0                        0                       1];
   
A21_a = simplify(A21_a);


% Matriz de Transformacao Homogenea A32_a (LINK 3 O3X3Y3Z3 -> O2X2Y2Z2)
A32_a = [cos(tht_3)  -sin(tht_3)*cos(0)  sin(tht_3)*sin(0)  Lc*cos(tht_3);
         sin(tht_3)   cos(tht_3)*cos(0) -cos(tht_3)*sin(0)  Lc*sin(tht_3);
         0            sin(0)             cos(0)             0;
         0            0                  0                  1];

A32_a = simplify(A32_a);

% Matriz de Transformacao Homogenea A43_a (LINK 4 O4X4Y4Z4 -> O3X3Y3Z3)
A43_a = [cos(tht_4)  -sin(tht_4)*cosd(180)  sin(tht_4)*sind(180)  a0*cos(tht_4);
         sin(tht_4)   cos(tht_4)*cosd(180) -cos(tht_4)*sind(180)  a0*sin(tht_4);
         0            sind(180)             cosd(180)             -d0;
         0            0                     0                     1];
A43_a = simplify(A43_a);

% Posicao e orientacao do sistema O1X1Y1Z1 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Tornozelo
T10_a = simplify(A10_a);

% Posicao e orientacao do sistema O2X2Y2Z2 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Joelho
T20_a = simplify(A10_a*A21_a);
 
% Posicao e orientacao do sistema O3X3Y3Z3 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do Quadril
T30_a = simplify(A10_a*A21_a*A32_a);
 
% Posicao e orientacao do sistema O4X4Y4Z4 em relacao ao sistema O0X0Y0Z0
% Posicao do CoM do HAT
T40_a = simplify(A10_a*A21_a*A32_a*A43_a);

syms tht_q tht_j tht_t
T1_A = subs(T10_a, tht_1, tht_q - tht_j + tht_t);
T2_A = subs(T20_a, [tht_1, tht_2], [tht_q - tht_j + tht_t, tht_q - tht_j]);
T3_A = subs(T30_a, [tht_1, tht_2, tht_3], [tht_q - tht_j + tht_t, tht_q - tht_j, tht_j]);
T4_A = subs(T40_a, [tht_1, tht_2, tht_3, tht_4], [tht_q - tht_j + tht_t, tht_q - tht_j, tht_j, -tht_q]);

%% ===========  CALCULO DO JACOBIANO PARA A FASE DE APOIO =================
% =========== SISTEMA O0X0Y0Z0 NA JUNTA DO QUADRIL =======================

% Vetor Z0 e O0 do sistema de referencia inercial O0x0Y0Z0
Z0_a = [0 0 1]';
O0_a = [0 0 0]';

% Vetor Z1, O1 e Matriz de Rotacao R_10 do sistema O1X1Y1Z1 em relacao ao 
% sistema O0X0Y0Z0 (Inercial)
Z1_a  = T10_a(1:3,3);
O1_a  = T10_a(1:3,4);
R10_a = T10_a(1:3,1:3);
% Componente em Y da altura do link 1
h1_a  = T10_a(2,4);

% Vetor Z2, O2 e Matriz de Rotacao R_20 do sistema O2X2Y2Z2 em relacao ao 
% sistema O0X0Y0Z0 
Z2_a  = T20_a(1:3,3);
O2_a  = T20_a(1:3,4);
R20_a = T20_a(1:3,1:3);
% Componente em Y da altura do link 2
h2_a  = T20_a(2,4);

% Vetor Z3, O3 e Matriz de Rotacao R_30 do sistema O3X3Y3Z3 em relacao ao 
% sistema O0X0Y0Z0 
Z3_a  = T30_a(1:3,3);
O3_a  = T30_a(1:3,4);
R30_a = T30_a(1:3,1:3);
% Componente em Y da altura do link 3
h3_a  = T30_a(2,4);

% Vetor Z4, O4 e Matriz de Rotacao R_40 do sistema O4X4Y4Z4 em relacao ao 
% sistema O0X0Y0Z0 
Z4_a  = T40_a(1:3,3);
O4_a  = T40_a(1:3,4);
R40_a = T40_a(1:3,1:3);
% Componente em Y da altura do link 4 (HAT)
h4_a  = T40_a(2,4);

% Vetor distancia cada sistema OiXiYiZi em relacao a origem O0X0Y0Z0
O40_a = simplify(O4_a - O0_a);
O41_a = simplify(O4_a - O1_a);
O42_a = simplify(O4_a - O2_a);
O43_a = simplify(O4_a - O3_a);

% Matrizes jacobianas da velocidade Linear do End-Effector Jvi
Jv1_a = cross(Z0_a, O40_a);
Jv2_a = cross(Z1_a, O41_a);
Jv3_a = cross(Z2_a, O42_a);
Jv4_a = cross(Z3_a, O43_a);

% Matrizes jacobianas da velocidade Angular do End-Effector Jwi
Jw1_a = Z0_a;
Jw2_a = Z1_a;
Jw3_a = Z2_a;
Jw4_a = Z3_a;

% MATRIZ JACOBIANA PARA O MODELO DA FASE DE APOIO J_A = [Jvi; Jwi]
J_A = [Jv1_a Jv2_a Jv3_a Jv4_a;
       Jw1_a Jw2_a Jw3_a Jw4_a];
   
% CÁLCULO DA MATRIZ JACOBIANA INVERSA PARA A FASE DE APOIO COM A
% REFERENCIA O0X0Y0Z0 NO DEDAO E END-EFFECTOR NO CoM DO HAT 

% Jinv_A = simplify(pinv(J_A));
% Jinv_A = pinv(J_A);
% ================================================================================
Jinv_A(1,1) = (4*Lj*a0^2*cos(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) +...
4*Lp*a0^2*sin(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) +...
(5*Lc^2*Lj*cos(tht_1 - tht_2 + 2*tht_3))/2 + 3*Lc^2*Lp*sin(tht_1) + Lj^2*Lp*sin(tht_1) +...
3*Lc^2*Lp*sin(tht_1 - 2*tht_2 + 2*tht_3) + 4*Lp*a0^2*sin(tht_1) +...
Lc^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) + 2*Lj^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) -...
2*Lj^2*a0*cos(tht_2 - tht_1 + tht_3 + tht_4) - (5*Lc^2*Lj*cos(tht_1 - tht_2))/2 +...
Lj^2*Lp*sin(tht_1 - 2*tht_2) - 4*Lj*a0^2*cos(tht_1 - tht_2) -...
Lc^2*a0*cos(tht_1 - tht_2 + tht_3 - tht_4) + 2*Lc*a0^2*cos(tht_1 - tht_2 + tht_3 + 2*tht_4) +...
Lc*Lj^2*cos(tht_1 - tht_2 + tht_3) - Lc*Lj^2*cos(tht_2 - tht_1 + tht_3) -...
2*Lc*a0^2*cos(tht_1 - tht_2 + tht_3) + (3*Lc*Lj*Lp*sin(tht_1 + tht_3))/2 +...
3*Lc*Lp*a0*sin(tht_1 + tht_4) + 4*Lj*Lp*a0*sin(tht_1 - 2*tht_2 + tht_3 + tht_4) +...
(3*Lc*Lj*Lp*sin(tht_1 - tht_3))/2 + 3*Lc*Lp*a0*sin(tht_1 - tht_4) +...
2*Lj*Lp*a0*sin(tht_1 + tht_3 + tht_4) + 5*Lc*Lj*a0*cos(tht_1 - tht_2 + 2*tht_3 + tht_4) +...
6*Lc*Lp*a0*sin(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) + 3*Lc*Lj*Lp*sin(tht_1 - 2*tht_2 + tht_3) -...
Lc*Lj*a0*cos(tht_1 - tht_2 + tht_4) - 4*Lc*Lj*a0*cos(tht_2 - tht_1 + tht_4) -...
2*Lj*Lp*a0*sin(tht_3 - tht_1 + tht_4))/(3*Lc^2*Lj^2 + 3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 +...
4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) + 4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) +...
3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) - 4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) +...
Lj^2*Lp^2*cos(2*tht_2) - 8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) +...
3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) + 4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) +...
2*Lc^2*Lj*a0*cos(tht_3 + tht_4) + 4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) -...
5*Lc^2*Lj*Lp*sin(tht_2) + 4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) - 4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) -...
4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) - 4*Lc*Lp*a0^2*sin(tht_2 - tht_3) -...
4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) - 8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) -...
10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) - 2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(2,1) = (Lj*Lp^2*cos(tht_1 + tht_2) - (Lc^2*Lj*cos(tht_1 - tht_2 + 2*tht_3))/2 +...
(Lc^2*Lp*sin(tht_1))/2 + Lj^2*Lp*sin(tht_1) + (Lc^2*Lp*sin(tht_1 - 2*tht_2 + 2*tht_3))/2 +...
2*Lc^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) + 2*Lj^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) -...
2*Lj^2*a0*cos(tht_2 - tht_1 + tht_3 + tht_4) + 2*Lp^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) +...
(Lc^2*Lj*cos(tht_1 - tht_2))/2 + Lj*Lp^2*cos(tht_1 - tht_2) + Lj^2*Lp*sin(tht_1 - 2*tht_2) -...
2*Lc^2*a0*cos(tht_1 - tht_2 + tht_3 - tht_4) + 2*Lp^2*a0*cos(tht_1 + tht_2 - tht_3 - tht_4) +...
Lc*Lj^2*cos(tht_1 - tht_2 + tht_3) - Lc*Lj^2*cos(tht_2 - tht_1 + tht_3) +...
(3*Lc*Lp^2*cos(tht_1 + tht_2 - tht_3))/2 + (3*Lc*Lp^2*cos(tht_1 - tht_2 + tht_3))/2 -...
(Lc*Lj*Lp*sin(tht_1 + tht_3))/2 - Lc*Lp*a0*sin(tht_1 + tht_4) +...
2*Lj*Lp*a0*sin(tht_1 - 2*tht_2 + tht_3 + tht_4) + (5*Lc*Lj*Lp*sin(tht_1 - tht_3))/2 +...
2*Lc*Lp*a0*sin(tht_1 - tht_4) - 2*Lj*Lp*a0*sin(tht_1 + tht_3 + tht_4) +...
Lc*Lj*a0*cos(tht_1 - tht_2 + 2*tht_3 + tht_4) + Lc*Lp*a0*sin(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) +...
2*Lc*Lj*Lp*sin(tht_1 - 2*tht_2 + tht_3) + Lc*Lj*a0*cos(tht_1 - tht_2 + tht_4) -...
2*Lc*Lj*a0*cos(tht_2 - tht_1 + tht_4) - 4*Lj*Lp*a0*sin(tht_3 - tht_1 + tht_4))/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(3,1) = -((Lj*Lp^2*cos(tht_1 + tht_2))/2 +...
2*Lj*a0^2*cos(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) +...
2*Lp*a0^2*sin(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) + 3*Lc^2*Lj*cos(tht_1 - tht_2 + 2*tht_3) +...
(5*Lc^2*Lp*sin(tht_1))/2 + Lj^2*Lp*sin(tht_1) + (5*Lc^2*Lp*sin(tht_1 - 2*tht_2 + 2*tht_3))/2 +...
2*Lp*a0^2*sin(tht_1) - Lc^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) +...
2*Lj^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) - 2*Lj^2*a0*cos(tht_2 - tht_1 + tht_3 + tht_4) +...
Lp^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) - 3*Lc^2*Lj*cos(tht_1 - tht_2) +...
(Lj*Lp^2*cos(tht_1 - tht_2))/2 + Lj^2*Lp*sin(tht_1 - 2*tht_2) - 2*Lj*a0^2*cos(tht_1 - tht_2) +...
Lc^2*a0*cos(tht_1 - tht_2 + tht_3 - tht_4) - 2*Lc*a0^2*cos(tht_1 - tht_2 + tht_3 + 2*tht_4) +...
Lp^2*a0*cos(tht_1 + tht_2 - tht_3 - tht_4) + 3*Lc*Lj^2*cos(tht_1 - tht_2 + tht_3) -...
3*Lc*Lj^2*cos(tht_2 - tht_1 + tht_3) + (3*Lc*Lp^2*cos(tht_1 + tht_2 - tht_3))/2 +...
(3*Lc*Lp^2*cos(tht_1 - tht_2 + tht_3))/2 + 2*Lc*a0^2*cos(tht_1 - tht_2 + tht_3) -...
(Lc*Lj*Lp*sin(tht_1 + tht_3))/2 + 2*Lc*Lp*a0*sin(tht_1 + tht_4) +...
3*Lj*Lp*a0*sin(tht_1 - 2*tht_2 + tht_3 + tht_4) + 4*Lc*Lj*Lp*sin(tht_1 - tht_3) +...
2*Lc*Lp*a0*sin(tht_1 - tht_4) + 5*Lc*Lj*a0*cos(tht_1 - tht_2 + 2*tht_3 + tht_4) +...
4*Lc*Lp*a0*sin(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) +...
(7*Lc*Lj*Lp*sin(tht_1 - 2*tht_2 + tht_3))/2 - 4*Lc*Lj*a0*cos(tht_1 - tht_2 + tht_4) -...
Lc*Lj*a0*cos(tht_2 - tht_1 + tht_4) - 3*Lj*Lp*a0*sin(tht_3 - tht_1 + tht_4))/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(4,1) = -((Lj*Lp^2*cos(tht_1 + tht_2))/2 +...
2*Lj*a0^2*cos(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) +...
2*Lp*a0^2*sin(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) - Lc^2*Lj*cos(tht_1 - tht_2 + 2*tht_3) +...
Lc^2*Lp*sin(tht_1) + Lj^2*Lp*sin(tht_1) + Lc^2*Lp*sin(tht_1 - 2*tht_2 + 2*tht_3) +...
2*Lp*a0^2*sin(tht_1) + 4*Lc^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) +...
2*Lj^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) - 2*Lj^2*a0*cos(tht_2 - tht_1 + tht_3 + tht_4) +...
Lp^2*a0*cos(tht_1 - tht_2 + tht_3 + tht_4) + Lc^2*Lj*cos(tht_1 - tht_2) +...
(Lj*Lp^2*cos(tht_1 - tht_2))/2 + Lj^2*Lp*sin(tht_1 - 2*tht_2) - 2*Lj*a0^2*cos(tht_1 - tht_2) -...
4*Lc^2*a0*cos(tht_1 - tht_2 + tht_3 - tht_4) + 4*Lc*a0^2*cos(tht_1 - tht_2 + tht_3 + 2*tht_4) +...
Lp^2*a0*cos(tht_1 + tht_2 - tht_3 - tht_4) - Lc*Lj^2*cos(tht_1 - tht_2 + tht_3) +...
Lc*Lj^2*cos(tht_2 - tht_1 + tht_3) - 4*Lc*a0^2*cos(tht_1 - tht_2 + tht_3) +...
(3*Lc*Lj*Lp*sin(tht_1 + tht_3))/2 + 3*Lj*Lp*a0*sin(tht_1 - 2*tht_2 + tht_3 + tht_4) +...
3*Lc*Lp*a0*sin(tht_1 - tht_4) + Lc*Lj*a0*cos(tht_1 - tht_2 + 2*tht_3 + tht_4) +...
3*Lc*Lp*a0*sin(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) +...
(3*Lc*Lj*Lp*sin(tht_1 - 2*tht_2 + tht_3))/2 + 4*Lc*Lj*a0*cos(tht_1 - tht_2 + tht_4) -...
5*Lc*Lj*a0*cos(tht_2 - tht_1 + tht_4) - 3*Lj*Lp*a0*sin(tht_3 - tht_1 + tht_4))/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));
% ================================================================================
Jinv_A(1,2) = -(4*Lp*a0^2*cos(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) -...
4*Lj*a0^2*sin(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) + 3*Lc^2*Lp*cos(tht_1) + Lj^2*Lp*cos(tht_1) +...
3*Lc^2*Lp*cos(tht_1 - 2*tht_2 + 2*tht_3) + 4*Lp*a0^2*cos(tht_1) -...
(5*Lc^2*Lj*sin(tht_1 - tht_2 + 2*tht_3))/2 + Lj^2*Lp*cos(tht_1 - 2*tht_2) -...
Lc^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) - 2*Lj^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) -...
2*Lj^2*a0*sin(tht_2 - tht_1 + tht_3 + tht_4) + (5*Lc^2*Lj*sin(tht_1 - tht_2))/2 +...
4*Lj*a0^2*sin(tht_1 - tht_2) + Lc^2*a0*sin(tht_1 - tht_2 + tht_3 - tht_4) -...
2*Lc*a0^2*sin(tht_1 - tht_2 + tht_3 + 2*tht_4) - Lc*Lj^2*sin(tht_1 - tht_2 + tht_3) -...
Lc*Lj^2*sin(tht_2 - tht_1 + tht_3) + 2*Lc*a0^2*sin(tht_1 - tht_2 + tht_3) +...
3*Lc*Lp*a0*cos(tht_1 + tht_4) + 4*Lj*Lp*a0*cos(tht_1 - 2*tht_2 + tht_3 + tht_4) +...
(3*Lc*Lj*Lp*cos(tht_1 - tht_3))/2 + 3*Lc*Lp*a0*cos(tht_1 - tht_4) +...
2*Lj*Lp*a0*cos(tht_1 + tht_3 + tht_4) + 6*Lc*Lp*a0*cos(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) -...
5*Lc*Lj*a0*sin(tht_1 - tht_2 + 2*tht_3 + tht_4) + 3*Lc*Lj*Lp*cos(tht_1 - 2*tht_2 + tht_3) +...
2*Lj*Lp*a0*cos(tht_3 - tht_1 + tht_4) + Lc*Lj*a0*sin(tht_1 - tht_2 + tht_4) -...
4*Lc*Lj*a0*sin(tht_2 - tht_1 + tht_4) + (3*Lc*Lj*Lp*cos(tht_1 + tht_3))/2)/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(2,2) = (Lj*Lp^2*sin(tht_1 + tht_2) - (Lc^2*Lp*cos(tht_1))/2 -...
Lj^2*Lp*cos(tht_1) - (Lc^2*Lp*cos(tht_1 - 2*tht_2 + 2*tht_3))/2 -...
(Lc^2*Lj*sin(tht_1 - tht_2 + 2*tht_3))/2 - Lj^2*Lp*cos(tht_1 - 2*tht_2) +...
2*Lc^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) + 2*Lj^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) +...
2*Lj^2*a0*sin(tht_2 - tht_1 + tht_3 + tht_4) + 2*Lp^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) +...
(Lc^2*Lj*sin(tht_1 - tht_2))/2 + Lj*Lp^2*sin(tht_1 - tht_2) -...
2*Lc^2*a0*sin(tht_1 - tht_2 + tht_3 - tht_4) + 2*Lp^2*a0*sin(tht_1 + tht_2 - tht_3 - tht_4) +...
Lc*Lj^2*sin(tht_1 - tht_2 + tht_3) + Lc*Lj^2*sin(tht_2 - tht_1 + tht_3) +...
(3*Lc*Lp^2*sin(tht_1 + tht_2 - tht_3))/2 + (3*Lc*Lp^2*sin(tht_1 - tht_2 + tht_3))/2 +...
Lc*Lp*a0*cos(tht_1 + tht_4) - 2*Lj*Lp*a0*cos(tht_1 - 2*tht_2 + tht_3 + tht_4) -...
(5*Lc*Lj*Lp*cos(tht_1 - tht_3))/2 - 2*Lc*Lp*a0*cos(tht_1 - tht_4) +...
2*Lj*Lp*a0*cos(tht_1 + tht_3 + tht_4) - Lc*Lp*a0*cos(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) +...
Lc*Lj*a0*sin(tht_1 - tht_2 + 2*tht_3 + tht_4) - 2*Lc*Lj*Lp*cos(tht_1 - 2*tht_2 + tht_3) -...
4*Lj*Lp*a0*cos(tht_3 - tht_1 + tht_4) + Lc*Lj*a0*sin(tht_1 - tht_2 + tht_4) +...
2*Lc*Lj*a0*sin(tht_2 - tht_1 + tht_4) + (Lc*Lj*Lp*cos(tht_1 + tht_3))/2)/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(3,2) = (2*Lp*a0^2*cos(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) -...
(Lj*Lp^2*sin(tht_1 + tht_2))/2 - 2*Lj*a0^2*sin(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) +...
(5*Lc^2*Lp*cos(tht_1))/2 + Lj^2*Lp*cos(tht_1) + (5*Lc^2*Lp*cos(tht_1 - 2*tht_2 + 2*tht_3))/2 +...
2*Lp*a0^2*cos(tht_1) - 3*Lc^2*Lj*sin(tht_1 - tht_2 + 2*tht_3) + Lj^2*Lp*cos(tht_1 - 2*tht_2) +...
Lc^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) - 2*Lj^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) -...
2*Lj^2*a0*sin(tht_2 - tht_1 + tht_3 + tht_4) - Lp^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) +...
3*Lc^2*Lj*sin(tht_1 - tht_2) - (Lj*Lp^2*sin(tht_1 - tht_2))/2 + 2*Lj*a0^2*sin(tht_1 - tht_2) -...
Lc^2*a0*sin(tht_1 - tht_2 + tht_3 - tht_4) + 2*Lc*a0^2*sin(tht_1 - tht_2 + tht_3 + 2*tht_4) -...
Lp^2*a0*sin(tht_1 + tht_2 - tht_3 - tht_4) - 3*Lc*Lj^2*sin(tht_1 - tht_2 + tht_3) -...
3*Lc*Lj^2*sin(tht_2 - tht_1 + tht_3) - (3*Lc*Lp^2*sin(tht_1 + tht_2 - tht_3))/2 -...
(3*Lc*Lp^2*sin(tht_1 - tht_2 + tht_3))/2 - 2*Lc*a0^2*sin(tht_1 - tht_2 + tht_3) +...
2*Lc*Lp*a0*cos(tht_1 + tht_4) + 3*Lj*Lp*a0*cos(tht_1 - 2*tht_2 + tht_3 + tht_4) +...
4*Lc*Lj*Lp*cos(tht_1 - tht_3) + 2*Lc*Lp*a0*cos(tht_1 - tht_4) +...
4*Lc*Lp*a0*cos(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) -...
5*Lc*Lj*a0*sin(tht_1 - tht_2 + 2*tht_3 + tht_4) + (7*Lc*Lj*Lp*cos(tht_1 - 2*tht_2 + tht_3))/2 +...
3*Lj*Lp*a0*cos(tht_3 - tht_1 + tht_4) + 4*Lc*Lj*a0*sin(tht_1 - tht_2 + tht_4) -...
Lc*Lj*a0*sin(tht_2 - tht_1 + tht_4) - (Lc*Lj*Lp*cos(tht_1 + tht_3))/2)/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(4,2) = (2*Lp*a0^2*cos(tht_1 - 2*tht_2 + 2*tht_3 + 2*tht_4) -...
(Lj*Lp^2*sin(tht_1 + tht_2))/2 - 2*Lj*a0^2*sin(tht_1 - tht_2 + 2*tht_3 + 2*tht_4) +...
Lc^2*Lp*cos(tht_1) + Lj^2*Lp*cos(tht_1) + Lc^2*Lp*cos(tht_1 - 2*tht_2 + 2*tht_3) +...
2*Lp*a0^2*cos(tht_1) + Lc^2*Lj*sin(tht_1 - tht_2 + 2*tht_3) +...
Lj^2*Lp*cos(tht_1 - 2*tht_2) - 4*Lc^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) -...
2*Lj^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) - 2*Lj^2*a0*sin(tht_2 - tht_1 + tht_3 + tht_4) -...
Lp^2*a0*sin(tht_1 - tht_2 + tht_3 + tht_4) - Lc^2*Lj*sin(tht_1 - tht_2) -...
(Lj*Lp^2*sin(tht_1 - tht_2))/2 + 2*Lj*a0^2*sin(tht_1 - tht_2) +...
4*Lc^2*a0*sin(tht_1 - tht_2 + tht_3 - tht_4) - 4*Lc*a0^2*sin(tht_1 - tht_2 + tht_3 + 2*tht_4) -...
Lp^2*a0*sin(tht_1 + tht_2 - tht_3 - tht_4) + Lc*Lj^2*sin(tht_1 - tht_2 + tht_3) +...
Lc*Lj^2*sin(tht_2 - tht_1 + tht_3) + 4*Lc*a0^2*sin(tht_1 - tht_2 + tht_3) +...
3*Lj*Lp*a0*cos(tht_1 - 2*tht_2 + tht_3 + tht_4) + 3*Lc*Lp*a0*cos(tht_1 - tht_4) +...
3*Lc*Lp*a0*cos(tht_1 - 2*tht_2 + 2*tht_3 + tht_4) - Lc*Lj*a0*sin(tht_1 - tht_2 + 2*tht_3 + tht_4) +...
(3*Lc*Lj*Lp*cos(tht_1 - 2*tht_2 + tht_3))/2 + 3*Lj*Lp*a0*cos(tht_3 - tht_1 + tht_4) -...
4*Lc*Lj*a0*sin(tht_1 - tht_2 + tht_4) - 5*Lc*Lj*a0*sin(tht_2 - tht_1 + tht_4) +...
(3*Lc*Lj*Lp*cos(tht_1 + tht_3))/2)/(3*Lc^2*Lj^2 + 3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 +...
4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));
% ================================================================================

Jinv_A(1,3) = 0;
Jinv_A(2,3) = 0;
Jinv_A(3,3) = 0;
Jinv_A(4,3) = 0;
% ================================================================================

Jinv_A(1,4) = 0;
Jinv_A(2,4) = 0;
Jinv_A(3,4) = 0;
Jinv_A(4,4) = 0;
% ================================================================================

Jinv_A(1,5) = 0;
Jinv_A(2,5) = 0;
Jinv_A(3,5) = 0;
Jinv_A(4,5) = 0;
% ===================================================================================

Jinv_A(1,6) = -(Lc^2*a0^2*cos(2*tht_4) - Lc^2*a0^2 - 2*Lj^2*a0^2 - Lc^2*Lj^2 +...
2*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) + Lc^2*Lj^2*cos(2*tht_3) +...
2*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) +...
Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) + Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) +...
(Lc*Lj^2*Lp*sin(tht_2 + tht_3))/2 + (Lc^2*Lj*a0*cos(tht_3 + tht_4))/2 + Lc^2*Lj*Lp*sin(tht_2) -...
2*Lc*Lj*a0^2*cos(tht_3) - 2*Lc*Lj^2*a0*cos(tht_4) + 2*Lj*Lp*a0^2*sin(tht_2) +...
Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) - (Lc*Lj^2*Lp*sin(tht_2 - tht_3))/2 - Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) -...
(Lc^2*Lj*a0*cos(tht_3 - tht_4))/2 + 2*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) + 2*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) +...
Lc*Lp*a0^2*sin(tht_2 - tht_3) + Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) + 2*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) +...
(5*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4))/2 + (Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/2)/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) + 4*Lj*Lp^2*a0*cos(tht_3 + tht_4) +...
3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) + 4*Lc*Lj*a0^2*cos(tht_3) +...
4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) -...
8*Lj*Lp*a0^2*sin(tht_2) - 4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) - 4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) -...
4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) - 4*Lc*Lp*a0^2*sin(tht_2 - tht_3) -...
4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) - 8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) -...
10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) - 2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(2,6) = -(4*Lc^2*a0^2*cos(2*tht_4) - 2*Lc^2*Lp^2 - 4*Lc^2*a0^2 - 4*Lj^2*a0^2 - 4*Lp^2*a0^2 -...
2*Lc^2*Lj^2 - 4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) - 2*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) +...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) + 2*Lc^2*Lj^2*cos(2*tht_3) +...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) - Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) -...
2*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) + Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) +...
Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) + 2*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) +...
Lc*Lj^2*Lp*sin(tht_2 + tht_3) - Lc^2*Lj*a0*cos(tht_3 + tht_4) - 2*Lj*Lp^2*a0*cos(tht_3 + tht_4) -...
Lc*Lj*Lp^2*cos(tht_3) + 4*Lc^2*Lj*Lp*sin(tht_2) - 4*Lc*Lj*a0^2*cos(tht_3) -...
4*Lc*Lj^2*a0*cos(tht_4) - 5*Lc*Lp^2*a0*cos(tht_4) - 5*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) +...
8*Lj*Lp*a0^2*sin(tht_2) + 4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) -...
Lc*Lj^2*Lp*sin(tht_2 - tht_3) - 4*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) +...
Lc^2*Lj*a0*cos(tht_3 - tht_4) + 4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) +...
4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) + 4*Lc*Lp*a0^2*sin(tht_2 - tht_3) +...
2*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) + 6*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) +...
9*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) + 3*Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/(2*(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4)));

Jinv_A(3,6) = (Lc^2*Lp^2 + (Lj^2*Lp^2)/2 + Lc^2*a0^2 + Lp^2*a0^2 - Lc^2*a0^2*cos(2*tht_4) +...
Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) +...
(Lj^2*Lp^2*cos(2*tht_2))/2 - Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) +...
(3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3))/2 + (3*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4))/2 +...
(Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4))/2 + (Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4))/2 -...
Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - Lc*Lj^2*Lp*sin(tht_2 + tht_3) +...
Lc^2*Lj*a0*cos(tht_3 + tht_4) + (3*Lj*Lp^2*a0*cos(tht_3 + tht_4))/2 +...
(3*Lc*Lj*Lp^2*cos(tht_3))/2 - Lc^2*Lj*Lp*sin(tht_2) + Lc*Lj*a0^2*cos(tht_3) -...
Lc*Lj^2*a0*cos(tht_4) + (3*Lc*Lp^2*a0*cos(tht_4))/2 +...
(3*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4))/2 - Lj*Lp*a0^2*sin(tht_2) +...
Lc*Lj^2*Lp*sin(tht_2 - tht_3) + Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) + Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) - (Lc*Lj*Lp*a0*sin(tht_2 + tht_4))/2 -...
Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) - (Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/2)/(3*Lc^2*Lj^2 +...
3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 + 4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) +...
4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + 3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) + Lj^2*Lp^2*cos(2*tht_2) -...
8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) + 3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) +...
4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) + 2*Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) - 5*Lc^2*Lj*Lp*sin(tht_2) +...
4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));

Jinv_A(4,6) = (Lc^2*Lj^2 + Lc^2*Lp^2 + (Lj^2*Lp^2)/2 + Lp^2*a0^2 +...
Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) + Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) -...
Lc^2*Lj^2*cos(2*tht_3) + (Lj^2*Lp^2*cos(2*tht_2))/2 - Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) +...
Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) + (3*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4))/2 -...
Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) - Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) + Lc^2*Lj*a0*cos(tht_3 + tht_4) +...
(3*Lj*Lp^2*a0*cos(tht_3 + tht_4))/2 + Lc*Lj*Lp^2*cos(tht_3) - Lc^2*Lj*Lp*sin(tht_2) -...
Lc*Lj*a0^2*cos(tht_3) + Lc*Lj^2*a0*cos(tht_4) + 2*Lc*Lp^2*a0*cos(tht_4) +...
2*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - Lj*Lp*a0^2*sin(tht_2) -...
Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) -...
Lc^2*Lj*a0*cos(tht_3 - tht_4) + Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
Lc*Lp*a0^2*sin(tht_2 - tht_3) - Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
(5*Lc*Lj*Lp*a0*sin(tht_2 + tht_4))/2 - 2*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) +...
(Lc*Lj*Lp*a0*sin(tht_2 - tht_4))/2)/(3*Lc^2*Lj^2 + 3*Lc^2*Lp^2 + Lj^2*Lp^2 + 4*Lc^2*a0^2 +...
4*Lj^2*a0^2 + 4*Lp^2*a0^2 - 4*Lc^2*a0^2*cos(2*tht_4) + 4*Lp^2*a0^2*cos(2*tht_3 - 2*tht_2 + 2*tht_4) +...
3*Lc^2*Lp^2*cos(2*tht_2 - 2*tht_3) - 4*Lj^2*a0^2*cos(2*tht_3 + 2*tht_4) - 3*Lc^2*Lj^2*cos(2*tht_3) +...
Lj^2*Lp^2*cos(2*tht_2) - 8*Lj*Lp*a0^2*sin(2*tht_3 - tht_2 + 2*tht_4) +...
3*Lc*Lj*Lp^2*cos(2*tht_2 - tht_3) + 4*Lj*Lp^2*a0*cos(tht_3 - 2*tht_2 + tht_4) -...
2*Lc^2*Lp*a0*sin(tht_2 - tht_3 + tht_4) - 2*Lc^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) -...
4*Lj^2*Lp*a0*sin(tht_3 - tht_2 + tht_4) - 2*Lc*Lj^2*Lp*sin(tht_2 + tht_3) +...
2*Lc^2*Lj*a0*cos(tht_3 + tht_4) + 4*Lj*Lp^2*a0*cos(tht_3 + tht_4) + 3*Lc*Lj*Lp^2*cos(tht_3) -...
5*Lc^2*Lj*Lp*sin(tht_2) + 4*Lc*Lj*a0^2*cos(tht_3) + 4*Lc*Lj^2*a0*cos(tht_4) +...
6*Lc*Lp^2*a0*cos(tht_4) + 6*Lc*Lp^2*a0*cos(2*tht_3 - 2*tht_2 + tht_4) - 8*Lj*Lp*a0^2*sin(tht_2) -...
4*Lc*Lp*a0^2*sin(tht_3 - tht_2 + 2*tht_4) + 2*Lc*Lj^2*Lp*sin(tht_2 - tht_3) +...
5*Lc^2*Lj*Lp*sin(tht_2 - 2*tht_3) - 2*Lc^2*Lj*a0*cos(tht_3 - tht_4) -...
4*Lc*Lj*a0^2*cos(tht_3 + 2*tht_4) - 4*Lc*Lj^2*a0*cos(2*tht_3 + tht_4) -...
4*Lc*Lp*a0^2*sin(tht_2 - tht_3) - 4*Lj^2*Lp*a0*sin(tht_2 + tht_3 + tht_4) -...
8*Lc*Lj*Lp*a0*sin(tht_2 + tht_4) - 10*Lc*Lj*Lp*a0*sin(2*tht_3 - tht_2 + tht_4) -...
2*Lc*Lj*Lp*a0*sin(tht_2 - tht_4));
% ====================================================================================

%% [4] FASE DE APOIO - REFERENCIA NO TORNOZELO - END-EFFECTOR NO CoM DO HAT
% Sao consideradas 3 juntas rotacionais: th1, th2, th3, th4
% syms tht_1 tht_2 tht_3 tht_4 Lc Lj Lp a0 d0;

%% ========== CALCULO MAS MATRIZES DE TRANSFORMACAO HOMOGENEA =============
% Matriz de Transformacao Homogenea A10_a (LINK 1 O1X1Y1Z1 -> O0X0Y0Z0)
A10_ap = [cos(tht_1+pi/2)   -sin(tht_1+pi/2)*cos(0)   sin(tht_1+pi/2)*sin(0) Lj*cos(tht_1+pi/2);
          sin(tht_1+pi/2)    cos(tht_1+pi/2)*cos(0)  -cos(tht_1+pi/2)*sin(0) Lj*sin(tht_1+pi/2);
          0                  sin(0)                   cos(0)                 0;
          0                  0                        0                      1];

A10_ap = simplify(A10_ap);

% Matriz de Transformacao Homogenea A21_a (LINK 2 O2X2Y2Z2 -> O1X1Y1Z1) 
A21_ap = [cos(tht_2)  -sin(tht_2)*cos(0)   sin(tht_2)*sin(0)  Lc*cos(tht_2);
          sin(tht_2)   cos(tht_2)*cos(0)  -cos(tht_2)*sin(0)  Lc*sin(tht_2);
          0            sin(0)              cos(0)             0;
          0            0                   0                  1];
   
A21_ap = simplify(A21_ap);

% Matriz de Transformacao Homogenea A43_a (LINK 4 O4X4Y4Z4 -> O3X3Y3Z3)
A32_ap = [cos(tht_3)  -sin(tht_3)*cosd(180)  sin(tht_3)*sind(180)  a0*cos(tht_3);
          sin(tht_3)   cos(tht_3)*cosd(180) -cos(tht_3)*sind(180)  a0*sin(tht_3);
          0            sind(180)             cosd(180)             -d0;
          0            0                     0                     1];
A32_ap = simplify(A32_ap);

% Posicao e orientacao do sistema O1X1Y1Z1 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do JOELHO
T10_ap = simplify(A10_ap);

% Posicao e orientacao do sistema O2X2Y2Z2 em relacao ao sistema O0X0Y0Z0
% Posicao da junta do QUADRIL
T20_ap = simplify(A10_ap*A21_ap);
 
% Posicao e orientacao do sistema O3X3Y3Z3 em relacao ao sistema O0X0Y0Z0
% Posicao do CoM DO HAT
T30_ap = simplify(A10_ap*A21_ap*A32_ap);

syms tht_q tht_j tht_t
T1_AP = subs(T10_ap, tht_1, tht_q - tht_j);
T2_AP = subs(T20_ap, [tht_1, tht_2], [tht_q - tht_j, tht_j]);
T3_AP = subs(T30_ap, [tht_1, tht_2, tht_3], [tht_q - tht_j, tht_j, -tht_q]);

%% ===========  CALCULO DO JACOBIANO PARA A FASE DE APOIO =================
% =========== SISTEMA O0X0Y0Z0 NA JUNTA DO TORNOZELO =====================

% Vetor Z0 e O0 do sistema de referencia inercial O0x0Y0Z0
Z0_ap = [0 0 1]';
O0_ap = [0 0 0]';

% Vetor Z1, O1 e Matriz de Rotacao R_10 do sistema O1X1Y1Z1 em relacao ao 
% sistema O0X0Y0Z0 (Inercial)
Z1_ap  = T10_ap(1:3,3);
O1_ap  = T10_ap(1:3,4);
R10_ap = T10_ap(1:3,1:3);
% Componente em Y da altura do link 1
h1_ap  = T10_ap(2,4);

% Vetor Z2, O2 e Matriz de Rotacao R_20 do sistema O2X2Y2Z2 em relacao ao 
% sistema O0X0Y0Z0 
Z2_ap  = T20_ap(1:3,3);
O2_ap  = T20_ap(1:3,4);
R20_ap = T20_ap(1:3,1:3);
% Componente em Y da altura do link 2
h2_ap  = T20_ap(2,4);

% Vetor Z3, O3 e Matriz de Rotacao R_30 do sistema O3X3Y3Z3 em relacao ao 
% sistema O0X0Y0Z0 
Z3_ap  = T30_ap(1:3,3);
O3_ap  = T30_ap(1:3,4);
R30_ap = T30_ap(1:3,1:3);
% Componente em Y da altura do link 3
h3_ap  = T30_ap(2,4);



% Vetor distancia cada sistema OiXiYiZi em relacao a origem O0X0Y0Z0
O30_ap = simplify(O3_ap - O0_ap);
O31_ap = simplify(O3_ap - O1_ap);
O32_ap = simplify(O3_ap - O2_ap);

% Matrizes jacobianas da velocidade Linear do End-Effector Jvi
Jv1_ap = cross(Z0_ap, O30_ap);
Jv2_ap = cross(Z1_ap, O31_ap);
Jv3_ap = cross(Z2_ap, O32_ap);

% Matrizes jacobianas da velocidade Angular do End-Effector Jwi
Jw1_ap = Z0_ap;
Jw2_ap = Z1_ap;
Jw3_ap = Z2_ap;

% MATRIZ JACOBIANA PARA O MODELO DA FASE DE APOIO J_A = [Jvi; Jwi]
J_AP = [Jv1_ap Jv2_ap Jv3_ap;
        Jw1_ap Jw2_ap Jw3_ap];
    
J_apoio = subs(J_AP, [tht_1, tht_2, tht_3], [tht_q - tht_j, tht_j, -tht_q]);

